import { MigrationInterface, QueryRunner } from "typeorm";

export class AddPriceFieldsToChickenOrders1739706129970 implements MigrationInterface {
    name = 'AddPriceFieldsToChickenOrders1739706129970'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_invoices_request"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_invoices_users_createdBy"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_requests_created_by"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_requests_approved_by"`);
        await queryRunner.query(`ALTER TABLE "feed_orders" DROP CONSTRAINT "FK_feed_orders_chicken_orders"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" DROP CONSTRAINT "FK_chicken_orders_customer"`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" DROP CONSTRAINT "FK_chicken_trackings_customer"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_customers_users_createdBy"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "check_sex"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "check_customer_sex"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" ADD "pricePerChicken" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" ADD "totalChickenPrice" numeric(10,2) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "phone" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."customers_center_enum" AS ENUM('KAHAMA', 'SHINYANGA', 'MAGANZO')`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "center" "public"."customers_center_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "UQ_INVOICE_NUMBER"`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "invoiceDate" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "dueDate" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "items" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "subtotal" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "total" DROP DEFAULT`);
        await queryRunner.query(`ALTER TYPE "public"."customer_center_enum" RENAME TO "customer_center_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_center_enum" AS ENUM('KAHAMA', 'SHINYANGA', 'MAGANZO')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "center" TYPE "public"."users_center_enum" USING "center"::"text"::"public"."users_center_enum"`);
        await queryRunner.query(`DROP TYPE "public"."customer_center_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."request_status_enum" RENAME TO "request_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."requests_status_enum" AS ENUM('PENDING', 'APPROVED', 'REJECTED', 'INVOICED')`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" TYPE "public"."requests_status_enum" USING "status"::"text"::"public"."requests_status_enum"`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."request_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."feed_type_enum" RENAME TO "feed_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."feed_orders_feedtype_enum" AS ENUM('BROILER_STARTER_MP', 'BROILER_STARTER_MV', 'BROILER_GROWER_MP', 'BROILER_GROWER_MV', 'BROILER_STARTER', 'BROILER_GROWER', 'BROILER_FINISHER', 'LAYER_STARTER', 'LAYER_GROWER', 'COMPLETE_LAYER_MASH', 'BACKBONE_LAYER_STARTER', 'BACKBONE_LAYER_GROWER', 'BACKBONE_COMPLETE_LAYER_MASH', 'LOCAL_FEED')`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ALTER COLUMN "feedType" TYPE "public"."feed_orders_feedtype_enum" USING "feedType"::"text"::"public"."feed_orders_feedtype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."feed_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."feed_company_enum" RENAME TO "feed_company_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."feed_orders_company_enum" AS ENUM('ARVINES', 'SILVERLAND', 'BACKBONE', 'LOCAL')`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ALTER COLUMN "company" TYPE "public"."feed_orders_company_enum" USING "company"::"text"::"public"."feed_orders_company_enum"`);
        await queryRunner.query(`DROP TYPE "public"."feed_company_enum_old"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "sex"`);
        await queryRunner.query(`CREATE TYPE "public"."customers_sex_enum" AS ENUM('MALE', 'FEMALE')`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "sex" "public"."customers_sex_enum" NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."chicken_orders_typeofchicken_enum" RENAME TO "chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_stock_chickentype_enum" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "chickenType" TYPE "public"."chicken_stock_chickentype_enum" USING "chickenType"::"text"::"public"."chicken_stock_chickentype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."chicken_orders_typeofchicken_enum" RENAME TO "chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_stock_chickentype_enum" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "chickenType" TYPE "public"."chicken_stock_chickentype_enum" USING "chickenType"::"text"::"public"."chicken_stock_chickentype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP CONSTRAINT "UQ_chicken_stock_type"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "currentQuantity" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "totalReceived" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "totalSold" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "minimumStock" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_98dbf5455fd8a604cd541936ef8" FOREIGN KEY ("requestId") REFERENCES "requests"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_dc9c84f58ab53b5c844c276e435" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_05061437f8bbfcfef7bef98d1ad" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_93dd6ea962d8a48df3f7448bdd5" FOREIGN KEY ("approvedById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ADD CONSTRAINT "FK_a059ecb23c79216adbec9a1895a" FOREIGN KEY ("chickenOrderId") REFERENCES "chicken_orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" ADD CONSTRAINT "FK_d8ae5aaff26a5f9713ac4f7840f" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" ADD CONSTRAINT "FK_7a3a0f648dac34d042e41852e70" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_aa88a28eac26e514147fc7d2039" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_aa88a28eac26e514147fc7d2039"`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" DROP CONSTRAINT "FK_7a3a0f648dac34d042e41852e70"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" DROP CONSTRAINT "FK_d8ae5aaff26a5f9713ac4f7840f"`);
        await queryRunner.query(`ALTER TABLE "feed_orders" DROP CONSTRAINT "FK_a059ecb23c79216adbec9a1895a"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_93dd6ea962d8a48df3f7448bdd5"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_05061437f8bbfcfef7bef98d1ad"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_dc9c84f58ab53b5c844c276e435"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_98dbf5455fd8a604cd541936ef8"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "minimumStock" SET DEFAULT '100'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "totalSold" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "totalReceived" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "currentQuantity" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD CONSTRAINT "UQ_chicken_stock_type" UNIQUE ("chickenType")`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_orders_typeofchicken_enum_old" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "chickenType" TYPE "public"."chicken_orders_typeofchicken_enum_old" USING "chickenType"::"text"::"public"."chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_stock_chickentype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."chicken_orders_typeofchicken_enum_old" RENAME TO "chicken_orders_typeofchicken_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_orders_typeofchicken_enum_old" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ALTER COLUMN "chickenType" TYPE "public"."chicken_orders_typeofchicken_enum_old" USING "chickenType"::"text"::"public"."chicken_orders_typeofchicken_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_stock_chickentype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."chicken_orders_typeofchicken_enum_old" RENAME TO "chicken_orders_typeofchicken_enum"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "sex"`);
        await queryRunner.query(`DROP TYPE "public"."customers_sex_enum"`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "sex" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."feed_company_enum_old" AS ENUM('ARVINES', 'SILVERLAND', 'BACKBONE', 'LOCAL')`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ALTER COLUMN "company" TYPE "public"."feed_company_enum_old" USING "company"::"text"::"public"."feed_company_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."feed_orders_company_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."feed_company_enum_old" RENAME TO "feed_company_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."feed_type_enum_old" AS ENUM('BROILER_STARTER_MP', 'BROILER_STARTER_MV', 'BROILER_GROWER_MP', 'BROILER_GROWER_MV', 'BROILER_STARTER', 'BROILER_GROWER', 'BROILER_FINISHER', 'LAYER_STARTER', 'LAYER_GROWER', 'COMPLETE_LAYER_MASH', 'BACKBONE_LAYER_STARTER', 'BACKBONE_LAYER_GROWER', 'BACKBONE_COMPLETE_LAYER_MASH', 'LOCAL_FEED')`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ALTER COLUMN "feedType" TYPE "public"."feed_type_enum_old" USING "feedType"::"text"::"public"."feed_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."feed_orders_feedtype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."feed_type_enum_old" RENAME TO "feed_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."request_status_enum_old" AS ENUM('PENDING', 'APPROVED', 'REJECTED', 'INVOICED')`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" TYPE "public"."request_status_enum_old" USING "status"::"text"::"public"."request_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "requests" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."requests_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."request_status_enum_old" RENAME TO "request_status_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."customer_center_enum_old" AS ENUM('KAHAMA', 'SHINYANGA', 'MAGANZO')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "center" TYPE "public"."customer_center_enum_old" USING "center"::"text"::"public"."customer_center_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."users_center_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."customer_center_enum_old" RENAME TO "customer_center_enum"`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "total" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "subtotal" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "items" SET DEFAULT '[]'`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "type" SET DEFAULT 'REQUEST'`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "dueDate" SET DEFAULT (CURRENT_DATE + '30 days')`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "invoiceDate" SET DEFAULT CURRENT_DATE`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "UQ_INVOICE_NUMBER" UNIQUE ("invoiceNumber")`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "center"`);
        await queryRunner.query(`DROP TYPE "public"."customers_center_enum"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" DROP COLUMN "totalChickenPrice"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" DROP COLUMN "pricePerChicken"`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "check_customer_sex" CHECK (((sex)::text = ANY ((ARRAY['MALE'::character varying, 'FEMALE'::character varying])::text[])))`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "check_sex" CHECK (((sex)::text = ANY ((ARRAY['MALE'::character varying, 'FEMALE'::character varying])::text[])))`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_customers_users_createdBy" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" ADD CONSTRAINT "FK_chicken_trackings_customer" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" ADD CONSTRAINT "FK_chicken_orders_customer" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ADD CONSTRAINT "FK_feed_orders_chicken_orders" FOREIGN KEY ("chickenOrderId") REFERENCES "chicken_orders"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_requests_approved_by" FOREIGN KEY ("approvedById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_requests_created_by" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_invoices_users_createdBy" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_invoices_request" FOREIGN KEY ("requestId") REFERENCES "requests"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
    }

}
