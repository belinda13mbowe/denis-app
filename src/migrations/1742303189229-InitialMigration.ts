import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialMigration1742303189229 implements MigrationInterface {
    name = 'InitialMigration1742303189229'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."documents_documenttype_enum" AS ENUM('INVOICE', 'PAYMENT_RECEIPT', 'DELIVERY_RECEIPT', 'EXPENSE_RECEIPT', 'REFUND_RECEIPT')`);
        await queryRunner.query(`CREATE TABLE "documents" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "documentType" "public"."documents_documenttype_enum" NOT NULL, "fileName" character varying NOT NULL, "filePath" character varying NOT NULL, "uploadedAt" TIMESTAMP NOT NULL DEFAULT now(), "invoiceId" uuid, "uploadedById" uuid, CONSTRAINT "PK_ac51aa5181ee2036f5ca482857c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."approvals_status_enum" AS ENUM('PENDING', 'APPROVED', 'REJECTED')`);
        await queryRunner.query(`CREATE TABLE "approvals" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "status" "public"."approvals_status_enum" NOT NULL DEFAULT 'PENDING', "comments" text, "approvedAt" TIMESTAMP NOT NULL DEFAULT now(), "invoiceId" uuid, "approverId" uuid, CONSTRAINT "PK_690417aaefa84d18b1a59e2a499" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."invoices_type_enum" AS ENUM('PURCHASE', 'SERVICE', 'CONSULTING', 'REQUEST')`);
        await queryRunner.query(`CREATE TYPE "public"."invoices_status_enum" AS ENUM('PENDING', 'MANAGER_APPROVED', 'APPROVED', 'CANCELLED')`);
        await queryRunner.query(`CREATE TABLE "invoices" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "invoiceNumber" character varying NOT NULL, "invoiceDate" date NOT NULL, "dueDate" date NOT NULL, "type" "public"."invoices_type_enum" NOT NULL, "items" jsonb NOT NULL, "subtotal" numeric(10,2) NOT NULL, "tax" numeric(10,2) NOT NULL DEFAULT '0', "total" numeric(10,2) NOT NULL, "status" "public"."invoices_status_enum" NOT NULL DEFAULT 'PENDING', "approved_by_id" uuid, "notes" text, "request_id" uuid, "created_by_id" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "orderId" uuid, "accountantId" uuid, CONSTRAINT "PK_668cef7c22a427fd822cc1be3ce" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."orders_status_enum" AS ENUM('PENDING', 'IN_PROGRESS', 'ACCOUNTANT_APPROVED', 'MANAGER_APPROVED', 'APPROVED', 'CANCELLED', 'REJECTED')`);
        await queryRunner.query(`CREATE TABLE "orders" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "company_name" character varying NOT NULL, "farm_name" character varying NOT NULL, "farm_number" character varying NOT NULL, "village_name" character varying NOT NULL, "contact_name" character varying NOT NULL, "phone_number" character varying NOT NULL, "items" jsonb NOT NULL, "total_amount" numeric(10,2) NOT NULL, "status" "public"."orders_status_enum" NOT NULL DEFAULT 'PENDING', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "order_manager_id" uuid, "approved_by_id" uuid, "order_number" character varying NOT NULL, "date" TIMESTAMP NOT NULL, "region" character varying NOT NULL, "pobox" character varying NOT NULL, CONSTRAINT "PK_710e2d4957aa5878dfe94e4ac2f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('ORDER_MANAGER', 'ACCOUNTANT', 'MANAGER', 'CEO', 'ADMIN')`);
        await queryRunner.query(`CREATE TYPE "public"."users_center_enum" AS ENUM('KAHAMA', 'SHINYANGA', 'MAGANZO')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "email" character varying NOT NULL, "password" character varying NOT NULL, "role" "public"."users_role_enum" NOT NULL DEFAULT 'ORDER_MANAGER', "center" "public"."users_center_enum", "isactive" boolean NOT NULL DEFAULT true, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."requests_status_enum" AS ENUM('PENDING', 'APPROVED', 'REJECTED', 'INVOICED')`);
        await queryRunner.query(`CREATE TABLE "requests" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "requestNumber" character varying NOT NULL, "requestDate" date NOT NULL, "taskType" character varying NOT NULL, "employeeName" character varying NOT NULL, "employeeTitle" character varying NOT NULL, "employeeAddress" character varying NOT NULL, "employeePhone" character varying NOT NULL, "items" jsonb NOT NULL, "invoiceSubtotal" numeric(10,2) NOT NULL, "transactionCharges" numeric(10,2) NOT NULL DEFAULT '0', "total" numeric(10,2) NOT NULL, "status" "public"."requests_status_enum" NOT NULL DEFAULT 'PENDING', "spadeEmployee" character varying, "createdById" uuid NOT NULL, "approvedById" uuid, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0428f484e96f9e6a55955f29b5f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "inventory" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "productName" character varying NOT NULL, "quantity" integer NOT NULL, "unity" character varying NOT NULL, "buyingPrice" numeric(10,2) NOT NULL, "totalBuyingCost" numeric(10,2) NOT NULL, "sellingPrice" numeric(10,2) NOT NULL, "totalSoldQtyLoan" integer NOT NULL DEFAULT '0', "totalSoldQtyCash" integer NOT NULL DEFAULT '0', "totalSalesLoan" numeric(10,2) NOT NULL DEFAULT '0', "totalSalesCash" numeric(10,2) NOT NULL DEFAULT '0', "remainingQty" integer NOT NULL, "remainingBuying" numeric(10,2) NOT NULL, "remainingSales" numeric(10,2) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_82aa5da437c5bbfb80703b08309" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_status_enum" AS ENUM('READ', 'UNREAD')`);
        await queryRunner.query(`CREATE TABLE "notifications" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "message" character varying NOT NULL, "status" "public"."notifications_status_enum" NOT NULL DEFAULT 'UNREAD', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "recipientId" uuid, CONSTRAINT "PK_6a72c3c0f683f6462415e653c3a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."stock_items_type_enum" AS ENUM('SASSO_CHICKS', 'BROILER_CHICKS', 'FEED')`);
        await queryRunner.query(`CREATE TYPE "public"."stock_items_status_enum" AS ENUM('PENDING', 'PARTIALLY_RECEIVED', 'FULLY_RECEIVED', 'APPROVED')`);
        await queryRunner.query(`CREATE TABLE "stock_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "type" "public"."stock_items_type_enum" NOT NULL, "status" "public"."stock_items_status_enum" NOT NULL DEFAULT 'PENDING', "expected_quantity" numeric(10,2) NOT NULL, "received_quantity" numeric(10,2) NOT NULL DEFAULT '0', "description" character varying NOT NULL, "unit_price" numeric(10,2) NOT NULL, "order_id" uuid NOT NULL, "received_by_id" uuid, "received_date" TIMESTAMP, "accountant_approved_by_id" uuid, "accountant_approved_date" TIMESTAMP, "notes" character varying, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_52a266aa3e04b8ad1f01088f3f0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."sales_paymenttype_enum" AS ENUM('CASH', 'LOAN')`);
        await queryRunner.query(`CREATE TABLE "sales" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "paymentType" "public"."sales_paymenttype_enum" NOT NULL, "items" jsonb NOT NULL, "totalAmount" numeric(10,2) NOT NULL, "amountPaid" numeric(10,2) NOT NULL DEFAULT '0', "remainingAmount" numeric(10,2) NOT NULL DEFAULT '0', "paymentHistory" jsonb, "createdById" uuid NOT NULL, "customerId" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_4f0bc990ae81dba46da680895ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "chicken_trackings" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "customerId" uuid NOT NULL, "totalOrdered" integer NOT NULL DEFAULT '0', "totalReceived" integer NOT NULL DEFAULT '0', "lastDeliveryDate" TIMESTAMP, "pendingDeliveries" jsonb NOT NULL DEFAULT '[]', "currentBatch" jsonb, "healthStatus" jsonb, "farmVisits" jsonb NOT NULL DEFAULT '[]', "batchHistory" jsonb NOT NULL DEFAULT '[]', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_9caa5bf6d1113e7017ef353aed0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."customers_sex_enum" AS ENUM('MALE', 'FEMALE')`);
        await queryRunner.query(`CREATE TYPE "public"."customers_center_enum" AS ENUM('KAHAMA', 'SHINYANGA', 'MAGANZO')`);
        await queryRunner.query(`CREATE TABLE "customers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "phone" character varying NOT NULL, "sex" "public"."customers_sex_enum" NOT NULL, "center" "public"."customers_center_enum" NOT NULL, "farmingPlace" character varying, "village" character varying NOT NULL, "street" character varying NOT NULL, "district" character varying NOT NULL, "region" character varying NOT NULL, "state" character varying NOT NULL, "createdById" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_133ec679a801fab5e070f73d3ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_orders_type_of_chicken_enum" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_orders_payment_status_enum" AS ENUM('PAID', 'PARTIAL', 'UNPAID')`);
        await queryRunner.query(`CREATE TABLE "chicken_orders" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "chicken_paid" integer NOT NULL DEFAULT '0', "chicken_loan" integer NOT NULL DEFAULT '0', "total_chicken" integer NOT NULL DEFAULT '0', "type_of_chicken" "public"."chicken_orders_type_of_chicken_enum" NOT NULL DEFAULT 'SASSO', "payment_status" "public"."chicken_orders_payment_status_enum" NOT NULL DEFAULT 'UNPAID', "price_per_chicken" numeric(10,2) NOT NULL DEFAULT '0', "total_chicken_price" numeric(10,2) NOT NULL DEFAULT '0', "amount_paid" numeric(10,2) NOT NULL DEFAULT '0', "delivery_date" date NOT NULL, "receiving_status" character varying NOT NULL DEFAULT 'PENDING', "ward" character varying NOT NULL, "village" character varying NOT NULL, "phone" character varying NOT NULL, "batch" integer NOT NULL, "is_weekly_order" boolean NOT NULL DEFAULT false, "order_date" date NOT NULL, "customer_id" uuid NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_14d6c130c970f309ab88c9f87bb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."feed_orders_feed_type_enum" AS ENUM('BROILER_STARTER_MP', 'BROILER_STARTER_MV', 'BROILER_GROWER_MP', 'BROILER_GROWER_MV', 'BROILER_STARTER', 'BROILER_GROWER', 'BROILER_FINISHER', 'LAYER_STARTER', 'LAYER_GROWER', 'COMPLETE_LAYER_MASH', 'BACKBONE_LAYER_STARTER', 'BACKBONE_LAYER_GROWER', 'BACKBONE_COMPLETE_LAYER_MASH', 'LOCAL_FEED')`);
        await queryRunner.query(`CREATE TYPE "public"."feed_orders_company_enum" AS ENUM('ARVINES', 'SILVERLAND', 'BACKBONE', 'LOCAL')`);
        await queryRunner.query(`CREATE TABLE "feed_orders" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "feed_type" "public"."feed_orders_feed_type_enum" NOT NULL, "company" "public"."feed_orders_company_enum" NOT NULL, "quantity" numeric(10,2) NOT NULL, "price_per_unit" numeric(10,2) NOT NULL, "total_price" numeric(10,2) NOT NULL, "chicken_order_id" uuid, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_4b76431c6c7eae65b53909eaf7c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."chicken_stock_chickentype_enum" AS ENUM('SASSO', 'BROILER')`);
        await queryRunner.query(`CREATE TABLE "chicken_stock" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "chickenType" "public"."chicken_stock_chickentype_enum" NOT NULL, "currentQuantity" integer NOT NULL, "totalReceived" integer NOT NULL, "totalSold" integer NOT NULL, "minimumStock" integer NOT NULL, "numberOfBoxes" integer NOT NULL DEFAULT '0', "chickensPerBox" integer NOT NULL DEFAULT '100', "pricePerBox" numeric(10,2) NOT NULL DEFAULT '0', "sellingPricePerChicken" numeric(10,2) NOT NULL DEFAULT '0', "buyingPricePerChicken" numeric(10,2) NOT NULL DEFAULT '0', "totalBoxValue" numeric(10,2) NOT NULL DEFAULT '0', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_9af7830aa3897fb2c9a1aff87e0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD CONSTRAINT "UQ_ce256634659f60690ce0864d54f" UNIQUE ("chickenType")`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "currentQuantity"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "currentQuantity" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "totalReceived"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "totalReceived" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "totalSold"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "totalSold" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "minimumStock"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "minimumStock" numeric(10,2) NOT NULL DEFAULT '100'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "numberOfBoxes"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "numberOfBoxes" numeric(10,2) NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "chickensPerBox"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "chickensPerBox" numeric(10,2) NOT NULL DEFAULT '100'`);
        await queryRunner.query(`ALTER TABLE "documents" ADD CONSTRAINT "FK_998c6b9d2d3f298243299a14d72" FOREIGN KEY ("invoiceId") REFERENCES "invoices"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "documents" ADD CONSTRAINT "FK_5aad3bc717a4f483887ec61dbc8" FOREIGN KEY ("uploadedById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "FK_0321dd185a38624e1b3d3694ecb" FOREIGN KEY ("invoiceId") REFERENCES "invoices"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "FK_f5287ff42fc3f68220c38e6c3cd" FOREIGN KEY ("approverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_9fe85211b14a3e4ac6073d7b958" FOREIGN KEY ("approved_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_5d8cd723804abd90763d93e7e43" FOREIGN KEY ("request_id") REFERENCES "requests"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_7e369959f4952d563122ef12f11" FOREIGN KEY ("created_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_a58a78a0e0031dd93a2f56f1e8e" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_96ffc26e368c4fe71119ce27df5" FOREIGN KEY ("accountantId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_3f59a22c8e9460043609624b6e8" FOREIGN KEY ("order_manager_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_525bed823554f8d8e3d037a9c6d" FOREIGN KEY ("approved_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_05061437f8bbfcfef7bef98d1ad" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "requests" ADD CONSTRAINT "FK_93dd6ea962d8a48df3f7448bdd5" FOREIGN KEY ("approvedById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_db873ba9a123711a4bff527ccd5" FOREIGN KEY ("recipientId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_items" ADD CONSTRAINT "FK_bd221a857246c03a4ea0bdcde64" FOREIGN KEY ("order_id") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_items" ADD CONSTRAINT "FK_0f3c7de03a25e8a098a4d2787d2" FOREIGN KEY ("received_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_items" ADD CONSTRAINT "FK_1ae4552f5905ad950077525ebcc" FOREIGN KEY ("accountant_approved_by_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_579a13a0f8d438c6f5a0d732556" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_3a92cf6add00043cef9833db1cd" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" ADD CONSTRAINT "FK_7a3a0f648dac34d042e41852e70" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_aa88a28eac26e514147fc7d2039" FOREIGN KEY ("createdById") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" ADD CONSTRAINT "FK_3bc201a5891f53183e5913b1052" FOREIGN KEY ("customer_id") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "feed_orders" ADD CONSTRAINT "FK_36741b798683feb2262699861aa" FOREIGN KEY ("chicken_order_id") REFERENCES "chicken_orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "feed_orders" DROP CONSTRAINT "FK_36741b798683feb2262699861aa"`);
        await queryRunner.query(`ALTER TABLE "chicken_orders" DROP CONSTRAINT "FK_3bc201a5891f53183e5913b1052"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_aa88a28eac26e514147fc7d2039"`);
        await queryRunner.query(`ALTER TABLE "chicken_trackings" DROP CONSTRAINT "FK_7a3a0f648dac34d042e41852e70"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_3a92cf6add00043cef9833db1cd"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_579a13a0f8d438c6f5a0d732556"`);
        await queryRunner.query(`ALTER TABLE "stock_items" DROP CONSTRAINT "FK_1ae4552f5905ad950077525ebcc"`);
        await queryRunner.query(`ALTER TABLE "stock_items" DROP CONSTRAINT "FK_0f3c7de03a25e8a098a4d2787d2"`);
        await queryRunner.query(`ALTER TABLE "stock_items" DROP CONSTRAINT "FK_bd221a857246c03a4ea0bdcde64"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_db873ba9a123711a4bff527ccd5"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_93dd6ea962d8a48df3f7448bdd5"`);
        await queryRunner.query(`ALTER TABLE "requests" DROP CONSTRAINT "FK_05061437f8bbfcfef7bef98d1ad"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_525bed823554f8d8e3d037a9c6d"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_3f59a22c8e9460043609624b6e8"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_96ffc26e368c4fe71119ce27df5"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_a58a78a0e0031dd93a2f56f1e8e"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_7e369959f4952d563122ef12f11"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_5d8cd723804abd90763d93e7e43"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_9fe85211b14a3e4ac6073d7b958"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT "FK_f5287ff42fc3f68220c38e6c3cd"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT "FK_0321dd185a38624e1b3d3694ecb"`);
        await queryRunner.query(`ALTER TABLE "documents" DROP CONSTRAINT "FK_5aad3bc717a4f483887ec61dbc8"`);
        await queryRunner.query(`ALTER TABLE "documents" DROP CONSTRAINT "FK_998c6b9d2d3f298243299a14d72"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "chickensPerBox"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "chickensPerBox" integer NOT NULL DEFAULT '100'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "numberOfBoxes"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "numberOfBoxes" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "minimumStock"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "minimumStock" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "totalSold"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "totalSold" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "totalReceived"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "totalReceived" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP COLUMN "currentQuantity"`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" ADD "currentQuantity" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "chicken_stock" DROP CONSTRAINT "UQ_ce256634659f60690ce0864d54f"`);
        await queryRunner.query(`DROP TABLE "chicken_stock"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_stock_chickentype_enum"`);
        await queryRunner.query(`DROP TABLE "feed_orders"`);
        await queryRunner.query(`DROP TYPE "public"."feed_orders_company_enum"`);
        await queryRunner.query(`DROP TYPE "public"."feed_orders_feed_type_enum"`);
        await queryRunner.query(`DROP TABLE "chicken_orders"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_orders_payment_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."chicken_orders_type_of_chicken_enum"`);
        await queryRunner.query(`DROP TABLE "customers"`);
        await queryRunner.query(`DROP TYPE "public"."customers_center_enum"`);
        await queryRunner.query(`DROP TYPE "public"."customers_sex_enum"`);
        await queryRunner.query(`DROP TABLE "chicken_trackings"`);
        await queryRunner.query(`DROP TABLE "sales"`);
        await queryRunner.query(`DROP TYPE "public"."sales_paymenttype_enum"`);
        await queryRunner.query(`DROP TABLE "stock_items"`);
        await queryRunner.query(`DROP TYPE "public"."stock_items_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."stock_items_type_enum"`);
        await queryRunner.query(`DROP TABLE "notifications"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_status_enum"`);
        await queryRunner.query(`DROP TABLE "inventory"`);
        await queryRunner.query(`DROP TABLE "requests"`);
        await queryRunner.query(`DROP TYPE "public"."requests_status_enum"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_center_enum"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`DROP TABLE "orders"`);
        await queryRunner.query(`DROP TYPE "public"."orders_status_enum"`);
        await queryRunner.query(`DROP TABLE "invoices"`);
        await queryRunner.query(`DROP TYPE "public"."invoices_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."invoices_type_enum"`);
        await queryRunner.query(`DROP TABLE "approvals"`);
        await queryRunner.query(`DROP TYPE "public"."approvals_status_enum"`);
        await queryRunner.query(`DROP TABLE "documents"`);
        await queryRunner.query(`DROP TYPE "public"."documents_documenttype_enum"`);
    }

}
